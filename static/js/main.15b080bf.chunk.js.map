{"version":3,"sources":["leoayala_resume.pdf","components/Nav/NavTabs.js","components/pages/About.js","components/pages/Resume.js","components/pages/Contact.js","utils/helpers.js","components/pages/Portfolio.js","components/Nav/PortfolioContainer.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavTabs","props","className","map","tab","key","href","toLowerCase","onClick","handlePageChange","currentPage","About","Download","Pdf","target","Component","Contact","useState","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","validateEmail","value","console","log","id","onSubmit","preventDefault","htmlFor","type","defaultValue","onChange","rows","Portfolio","PortfolioPage","Resume","renderPage","footer","Container","Row","Col","aria-hidden","App","Navbar","bg","expand","Nav","PortfolioContainer","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,6C,8KCuB5BC,MArBf,SAAiBC,GAEf,OACE,wBAAIC,UAAU,gBAFH,CAAC,QAAS,YAAa,SAAU,WAGpCC,KAAI,SAAAC,GAAG,OACX,wBAAIF,UAAU,WAAWG,IAAKD,GAC5B,uBACEE,KAAM,IAAMF,EAAIG,cAChBC,QAAS,kBAAMP,EAAMQ,iBAAiBL,IACtCF,UACED,EAAMS,cAAgBN,EAAM,kBAAoB,YAGjDA,SCQEO,EArBD,kBACZ,6BACE,yDACA,6BACE,6BACI,4BACE,sDACA,oEACA,0CACA,2DAIN,0b,iDCASC,E,uKARX,OACE,yBAAKV,UAAY,OACf,uBAAGI,KAAQO,IAAKC,OAAS,UAAzB,kC,GANeC,a,gBCkDJC,MAhDnB,WAAoB,IAAD,EAEmBC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAF5D,mBAERC,EAFQ,KAEGC,EAFH,KAGPJ,EAAyBG,EAAzBH,KAAMC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAHN,EAIyBH,mBAAS,IAJlC,mBAIRM,EAJQ,KAIMC,EAJN,KAMf,SAASC,EAAaC,GACpB,GAAsB,UAAlBA,EAAEZ,OAAOI,KAAkB,CAC7B,IAAMS,ECTP,SAAuBR,GAE5B,MADS,wJACCS,KAAKC,OAAOV,GAAOZ,eDOPuB,CAAcJ,EAAEZ,OAAOiB,OACvCC,QAAQC,IAAIN,GAKVH,EAHGG,EAGa,GAFA,0BAKfJ,GACHD,EAAa,2BAAKD,GAAN,kBAAkBK,EAAEZ,OAAOI,KAAOQ,EAAEZ,OAAOiB,SAO3D,OACI,iCACE,0CACA,0BAAMG,GAAG,eAAeC,SAP9B,SAAsBT,GACpBA,EAAEU,mBAOE,6BACE,2BAAOC,QAAQ,QAAf,SACA,2BAAOC,KAAK,OAAOC,aAAcrB,EAAMsB,SAAUf,EAAcP,KAAK,UAEtE,6BACE,2BAAOmB,QAAQ,SAAf,kBACA,2BAAOC,KAAK,QAAQC,aAAcpB,EAAOqB,SAAUf,EAAcP,KAAK,WAExE,6BACE,2BAAOmB,QAAQ,WAAf,YACA,8BAAUnB,KAAK,UAAUqB,aAAcnB,EAASoB,SAAUf,EAAcgB,KAAK,OAE/E,4BAAQH,KAAK,UAAb,aE5BKI,EAhBG,kBAChB,6BACE,uDACA,usBCqCWC,MAnCf,WAA0B,IAAD,EACiB1B,mBAAS,QAD1B,mBAChBP,EADgB,KACHD,EADG,KAqBvB,OACE,6BACE,kBAAC,EAAD,CAASC,YAAaA,EAAaD,iBAAkBA,IACrD,yBAAKP,UAAU,UApBA,WAEjB,OAAQQ,GACN,IAAK,QACH,OAAQ,kBAAC,EAAD,MACV,IAAK,YACH,OAAQ,kBAAC,EAAD,MACV,IAAK,SACH,OAAQ,kBAACkC,EAAD,MACV,IAAK,UACH,OAAQ,kBAAC,EAAD,MACV,QACE,OAAQ,kBAAC,EAAD,OAWRC,M,8CCPOC,MArBf,WACI,OACI,4BAAQ5C,UAAU,QACd,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK/C,UAAU,8DAEX,uBAAGA,UAAU,OAAOI,KAAK,mDAAmDQ,OAAO,UAC/E,uBAAGZ,UAAU,wBAAwBgD,cAAY,UACrD,uBAAGhD,UAAU,OAAOI,KAAK,+BAA+BQ,OAAO,UAC3D,uBAAGZ,UAAU,eAAegD,cAAY,UAC5C,uBAAGhD,UAAU,OAAOI,KAAK,iCAAiCQ,OAAO,UAC7D,uBAAGZ,UAAU,iBAAiBgD,cAAY,eCMvDC,MAhBf,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQlD,UAAW,6BAA6BmD,GAAG,cAAcC,OAAO,MACtE,0CAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAD,OAEF,+BAEA,kBAACC,EAAD,QCPcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3C,QAAQ2C,MAAMA,EAAMvD,c","file":"static/js/main.15b080bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leoayala_resume.a9db0573.pdf\";","import React from 'react';\n\nfunction NavTabs(props) {\n  const tabs = ['About', 'Portfolio', 'Resume', 'Contact'];\n  return (\n    <ul className=\"nav nav-tabs\">\n      {tabs.map(tab => (\n        <li className=\"nav-item\" key={tab}>\n          <a\n            href={'#' + tab.toLowerCase()}\n            onClick={() => props.handlePageChange(tab)}\n            className={\n              props.currentPage === tab ? 'nav-link active' : 'nav-link'\n            }\n          >\n            {tab}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\n\nconst About = () => (\n  <div>\n    <h1>A few things about myself</h1>\n    <div>\n      <div>\n          <ul>\n            <li>Aspiring Web Developer</li>\n            <li>Health and Weightlifting Enthusiast </li>\n            <li>UCF Alumni</li>\n            <li>Based in Central Florida</li>\n          </ul>\n      </div>\n    </div>\n      <p>\n        Shortly after graduating with my Bachelors degree in Sports and Exercise Science, I decided to embark on the path of becoming a web developer.\n        While on this journey, I will be attempting to combine the best of brains and brawns. \n        My goal wil be to successfully create applications that are easy to use and understand by a common person but also high-level enough for athletes of different experiences to enjoy.\n      </p>\n  </div>\n);\n\nexport default About;\n","import React, {Component} from \"react\";\nimport Pdf from '../../leoayala_resume.pdf'\n\nclass Download extends Component {\n\n  render() {\n\n    return (\n      <div className = \"App\">\n        <a href = {Pdf} target = \"_blank\">Click here for my resume!</a>\n      </div>\n    );\n  }\n}\n\nexport default Download;\n","import React, {useState} from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\n\n\nfunction Contact() {\n    \n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n\n    function handleChange(e) {\n      if (e.target.name === 'email') {\n        const isValid = validateEmail(e.target.value);\n        console.log(isValid);\n        // isValid conditional statement\n        if (!isValid) {\n          setErrorMessage('Your email is invalid.');\n        } else {\n          setErrorMessage('');\n        }\n      }        \n      if (!errorMessage) {\n        setFormState({ ...formState, [e.target.name]: e.target.value });\n      }    }\n\n    function handleSubmit(e) {\n      e.preventDefault();\n    }    \n        \n    return (\n        <section>\n          <h1>Contact me</h1>\n          <form id=\"contact-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" defaultValue={name} onChange={handleChange} name=\"name\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email address:</label>\n            <input type=\"email\" defaultValue={email} onChange={handleChange} name=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"message\">Message:</label>\n            <textarea name=\"message\" defaultValue={message} onChange={handleChange} rows=\"5\"  />\n          </div>\n          <button type=\"submit\">Submit</button>\n          </form>\n        </section>\n      )\n    \n    }\n    \n    export default Contact;\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from \"react\";\n\nconst Portfolio = () => (\n  <div>\n    <h1>Welcome to my Portfolio</h1>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque velit, lobortis ut magna\n      varius, blandit rhoncus sem. Morbi lacinia nisi ac dui fermentum, sed luctus urna tincidunt.\n      Etiam ut feugiat ex. Cras non risus mi. Curabitur mattis rutrum ipsum, ut aliquet urna\n      imperdiet ac. Sed nec nulla aliquam, bibendum odio eget, vestibulum tortor. Cras rutrum ligula\n      in tincidunt commodo. Morbi sit amet mollis orci, in tristique ex. Donec nec ornare elit.\n      Donec blandit est sed risus feugiat porttitor. Vestibulum molestie hendrerit massa non\n      consequat. Vestibulum vitae lorem tortor. In elementum ultricies tempus. Interdum et malesuada\n      fames ac ante ipsum primis in faucibus.\n    </p>\n  </div>\n);\n\nexport default Portfolio;\n","import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport About from '../pages/About';\nimport Resume from '../pages/Resume';\nimport Contact from '../pages/Contact';\nimport Portfolio from '../pages/Portfolio'\n\nfunction PortfolioPage() {\n  const [currentPage, handlePageChange] = useState('Home');\n\n\n  const renderPage = () => {\n    // Add a switch statement that will return the appropriate component of the 'currentPage'\n    switch (currentPage) {\n      case 'About':\n        return (<About/>)\n      case 'Portfolio':\n        return (<Portfolio/>)\n      case 'Resume':\n        return (<Resume/>)\n      case 'Contact':\n        return (<Contact/>)\n      default:\n        return (<About/>)\n      }\n    //\n  };\n\n  return (\n    <div >\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      <div className=\"render\">\n        {\n          // Render the component returned by 'renderPage()'\n        renderPage()\n          //\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default PortfolioPage;\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Row } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\nimport 'font-awesome/css/font-awesome.min.css';\n\nfunction footer() {\n    return (\n        <footer className=\"mt-5\">\n            <Container >\n                <Row>\n                    <Col className=\"navbar fixed-bottom d-flex justify-content-center p=0 md=3\" >\n                    \n                        <a className=\"p=10\" href=\"https://www.linkedin.com/in/leo-ayala-36b333l58/\" target=\"_blank\">\n                            <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i></a>\n                        <a className=\"p=10\" href=\"https://github.com/leo-ayala\" target=\"_blank\">\n                            <i className=\"fa fa-github\" aria-hidden=\"true\"></i></a>\n                        <a className=\"p=10\" href=\"mailto:leo.ayala.dev@gmail.com\" target=\"_blank\">\n                            <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i></a>\n                    \n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default footer;\n","import React from 'react';\nimport './App.css';\nimport PortfolioContainer from './components/Nav/PortfolioContainer';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Footer from \"./components/Footer/index\"\n\n\nfunction App() {\n  return (\n    <div>\n      <Navbar className= \"nav justify-content-center\" bg=\"transparent\" expand=\"lg\">\n        <h1>Leo Ayala</h1> \n      </Navbar>\n      <Nav>\n        <PortfolioContainer/>\n      </Nav>\n      <main >\n      </main>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}